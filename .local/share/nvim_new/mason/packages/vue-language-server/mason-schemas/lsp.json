{"title":"Vue","type":"object","properties":{"vue.splitEditors.icon":{"default":false,"type":"boolean","description":"Show split editor icon in title area of editor."},"vue.inlayHints.inlineHandlerLeading":{"default":false,"type":"boolean","markdownDescription":"Show inlay hints for event argument in inline handlers:\n\n```html\n<Comp @foo=\"/* $event => */console.log($event)\" />\n```"},"vue.splitEditors.layout.left":{"default":["script","scriptSetup","styles"],"type":"array","items":{"type":"string"}},"vue.inlayHints.optionsWrapper":{"default":false,"type":"boolean","markdownDescription":"Show inlay hints for component options wrapper for type support:\n\n```vue\n<script lang=\"ts\">\nexport default /* (await import('vue')).defineComponent( */{}/* ) */;\n</script>\n```"},"vue.splitEditors.layout.right":{"default":["template","customBlocks"],"type":"array","items":{"type":"string"}},"vue.inlayHints.vBindShorthand":{"default":false,"type":"boolean","markdownDescription":"Show inlay hints for v-bind shorthand:\n\n```html\n<Comp :foo />\n     <!-- ^ =\"foo\" -->\n```"},"vue.updateImportsOnFileMove.enabled":{"default":true,"type":"boolean","description":"Enabled update imports on file move."},"vue.format.template.initialIndent":{"type":"boolean","default":true},"vue.codeActions.enabled":{"default":true,"type":"boolean","description":"Enabled code actions."},"vue.format.script.initialIndent":{"type":"boolean","default":false},"vue.codeActions.askNewComponentName":{"default":true,"type":"boolean","description":"Ask for new component name when extract component."},"vue.codeLens.enabled":{"default":true,"type":"boolean","description":"Enabled code lens."},"vue.complete.casing.tags":{"default":"autoPascal","type":"string","enumDescriptions":["Auto Detect from Content (Fallback to <kebab-case> if detect failed)","Auto Detect from Content  (Fallback to <PascalCase> if detect failed)","<kebab-case>","<PascalCase>"],"description":"Preferred tag name case.","enum":["autoKebab","autoPascal","kebab","pascal"]},"vue.trace.server":{"default":"off","type":"string","scope":"window","description":"Traces the communication between VS Code and the language server.","enum":["off","messages","verbose"]},"vue.server.hybridMode":{"default":"auto","type":["boolean","string"],"enumDescriptions":["Automatically detect and enable TypeScript Plugin/Hybrid Mode in a safe environment.","Only enable Vue TypeScript Plugin but disable Hybrid Mode.","Enable TypeScript Plugin/Hybrid Mode.","Disable TypeScript Plugin/Hybrid Mode."],"description":"Vue language server only handles CSS and HTML language support, and tsserver takes over TS language support via TS plugin.","enum":["auto","typeScriptPluginOnly",true,false]},"vue.format.wrapAttributes":{"default":"auto","type":"string","enum":["auto","force","force-aligned","force-expand-multiline","aligned-multiple","preserve","preserve-aligned"]},"vue.format.style.initialIndent":{"type":"boolean","default":false},"vue.complete.defineAssignment":{"default":true,"type":"boolean","description":"Auto add `const props = ` before `defineProps` when selecting the completion item `props`. (also `emit` and `slots`)"},"vue.complete.casing.props":{"default":"autoKebab","type":"string","enumDescriptions":["Auto Detect from Content (Fallback to :kebab-case=\"...\" if detect failed)","Auto Detect from Content (Fallback to :camelCase=\"...\" if detect failed)",":kebab-case=\"...\"",":camelCase=\"...\""],"description":"Preferred attr name case.","enum":["autoKebab","autoCamel","kebab","camel"]},"vue.autoInsert.dotValue":{"default":false,"type":"boolean","description":"Auto-complete Ref value with `.value`."},"vue.server.compatibleExtensions":{"description":"Set compatible extensions to skip automatic detection of Hybrid Mode.","default":[],"type":"array","items":{"type":"string"}},"vue.autoInsert.bracketSpacing":{"default":true,"type":"boolean","description":"Auto add space between double curly brackets: {{|}} -> {{ | }}"},"vue.server.includeLanguages":{"default":["vue"],"type":"array","items":{"type":"string"}},"vue.server.maxOldSpaceSize":{"default":null,"type":["number","null"],"description":"Set --max-old-space-size option on server process. If you have problem on frequently \"Request textDocument/** failed.\" error, try setting higher memory(MB) on it."},"vue.inlayHints.destructuredProps":{"default":false,"type":"boolean","markdownDescription":"Show inlay hints for destructured props:\n\n```ts\nwatch(() => /* props. */foo, () => { ... });\n```"},"vue.doctor.status":{"default":true,"type":"boolean","description":"Show known problems in status bar."},"vue.inlayHints.missingProps":{"default":false,"type":"boolean","markdownDescription":"Show inlay hints for missing required props:\n\n```html\n<Comp />\n<!-- ^ foo! -->\n```"}}}